#file: noinspection SpringBootApplicationYaml

# 数据源配置
dataSources:
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.17.0.1:3306/big_market_0?allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
    username: root
    password: 13433026660
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://172.17.0.1:3306/big_market_1?allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
    username: root
    password: 13433026660

# 规则配置
rules:
  - !SHARDING  # 数据分片
    defaultTableStrategy: # 默认的分表策略
      none:  # 将未配置的表视为单表
    defaultShardingColumn: id  # 默认的分片列名
    defaultKeyGenerateStrategy: # 默认的主键生成策略
      column: id
      keyGeneratorName: SNOWFLAKE
    # 分片自动表
    autoTables:
      # 安全领域
      User: # 用户
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      UserPurchaseHistory: # 用户购买历史
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      # 活动领域
      ActivityAccount: # 活动账户
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      ActivityOrder: # 活动单
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      ActivityOrderRewardTask: # 活动单奖品发放任务
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: id, shardingAlgorithmName: HASH_MOD_4 } }
      ActivityRedeemCode: # 活动兑换码
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: id, shardingAlgorithmName: HASH_MOD_4 } }
      # 抽奖领域
      Strategy: # 策略
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: strategyId, shardingAlgorithmName: HASH_MOD_4 } }
      StrategyAward: # 策略奖品中间表
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: strategyId, shardingAlgorithmName: HASH_MOD_4 } }
      Award: # 奖品
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: awardId, shardingAlgorithmName: HASH_MOD_4 } }
      RafflePool: # 抽奖池
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: strategyId, shardingAlgorithmName: HASH_MOD_4 } }
      UserRaffleConfig: # 用户抽奖配置
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      UserRaffleHistory: # 用户抽奖历史
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      # 返利领域
      RewardTask: # 返利任务
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: id, shardingAlgorithmName: HASH_MOD_4 } }
      PointsLog: # 积分流水
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: id, shardingAlgorithmName: HASH_MOD_4 } }
      RewardAccount: # 返利账户
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
      ExchangePrizesLog:
        actualDataSources: ds_${0..1}
        shardingStrategy: { standard: { shardingColumn: userId, shardingAlgorithmName: HASH_MOD_4 } }
    # 定义分片算法策略
    shardingAlgorithms:
      HASH_MOD_2:
        type: HASH_MOD
        props:
          sharding-count: 2
      HASH_MOD_4:
        type: HASH_MOD
        props:
          sharding-count: 4
    keyGenerators: # 定义主键生成策略
      SNOWFLAKE:
        type: SNOWFLAKE
        props:
          worker-id: 2
  - !SINGLE
    tables:
      - "*.*"  # 加载所有单表（Activity）

# 通用的属性配置
props:
  sql-show: false  # 显示 SQL 语句